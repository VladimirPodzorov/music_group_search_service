import json
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext

from tg_bot.keyboards.kb import ButtonText, get_skip_kb, get_on_start_kb
from tg_bot.request_client.client import Client
from .fsm_form import FormMusician

router = Router()


@router.message(Command("musician_profile"))
async def create_profile_artist(message: Message, state: FSMContext):
    await state.set_state(FormMusician.name)
    await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
                         reply_markup=ReplyKeyboardRemove())

@router.message(FormMusician.name)
async def add_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(FormMusician.age)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç?")

@router.message(FormMusician.age)
async def add_age(message: Message, state: FSMContext):
    await state.update_data(age=message.text)
    await state.set_state(FormMusician.musical_instrument)
    await message.answer("–ù–∞ –∫–∞–∫–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ —Ç—ã –∏–≥—Ä–∞–µ—à—å?")

@router.message(FormMusician.musical_instrument)
async def add_musical_instrument(message: Message, state: FSMContext):
    await state.update_data(musical_instrument=message.text)
    await state.set_state(FormMusician.experience)
    await message.answer("–ö–∞–∫ –¥–æ–ª–≥–æ —Ç—ã –∏–≥—Ä–∞–µ—à—å –Ω–∞, —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–æ–±–æ–π, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ?")

@router.message(FormMusician.experience)
async def add_experience(message: Message, state: FSMContext):
    await state.update_data(experience=message.text)
    await state.set_state(FormMusician.info)
    await message.answer(
        text="–ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.\n"
             "–ù–∞–ø—Ä–∏–º–µ—Ä: –≤ –∫–∞–∫–æ–º –∂–∞–Ω—Ä–µ —Ç—ã –∏–≥—Ä–∞–µ—à—å.\n"
             "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
        reply_markup=get_skip_kb()
    )


@router.message(FormMusician.info, F.text)
async def add_info(message: Message, state: FSMContext):
    if message.text == ButtonText.SKIP:
        await state.update_data(info="")
    else:
        await state.update_data(info=message.text)
    await state.set_state(FormMusician.avatar)
    await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–µ —Ñ–æ—Ç–æ –Ω–∞ –∞–≤–∞—Ç–∞—Ä.\n"
             "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
        reply_markup=get_skip_kb()
    )

@router.message(FormMusician.info)
async def handle_invalid_info(message: Message):
    await message.answer("–ü—Ä–æ—Å—Ç–∏. –ù–æ —Ç—É—Ç –Ω–∞–¥–æ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.\n"
                         "–ó–∞–ø–æ–ª–Ω–∏ –∏–Ω—Ñ–æ –µ—â–µ —Ä–∞–∑.\n"
                         "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
                         reply_markup=get_skip_kb())


@router.message(FormMusician.avatar, F.photo)
async def add_avatar(message: Message, state: FSMContext):
    await state.update_data(avatar=message.photo[-1].file_id)
    await state.set_state(FormMusician.sample)
    await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å –Ω–µ–±–æ–ª—å—à–æ–π –∞—É–¥–∏–æ —Å—ç–º–ø–ª —Å–≤–æ–µ–π –∏–≥—Ä—ã.\n"
             "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
        reply_markup=get_skip_kb()
    )


@router.message(FormMusician.avatar, F.text == ButtonText.SKIP)
async def skip_avatar(message: Message, state: FSMContext):
    await state.update_data(avatar="")
    await state.set_state(FormMusician.sample)
    await message.answer(
        text="–û—Ç–ø—Ä–∞–≤—å –Ω–µ–±–æ–ª—å—à–æ–π –∞—É–¥–∏–æ —Å—ç–º–ø–ª —Å–≤–æ–µ–π –∏–≥—Ä—ã.\n"
             "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
        reply_markup=get_skip_kb()
    )

@router.message(FormMusician.avatar)
async def handle_invalid_avatar(message: Message):
    await message.answer(
        text="–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.\n"
             "–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑.\n"
             "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
        reply_markup=get_skip_kb()
    )


@router.message(FormMusician.sample, F.text == ButtonText.SKIP)
async def add_sample(message: Message, state: FSMContext):
    data = await state.update_data(sample="")
    await state.clear()
    user_tg = message.from_user.id
    data.setdefault("user_tg", user_tg)
    client = Client()
    json_data = json.dumps(data, ensure_ascii=False)
    client.add_musician(json_data)
    await message.answer("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏—Å–∫–∞—Ç—å –≥—Ä—É–ø–ø—Éüòâ\n"
                             "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω —Ç–µ–º, –∫—Ç–æ –∏—â–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã.\n"
                             "–¢–∞–∫ –≤—ã –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π–¥–µ—Ç–µ —Å–µ–±–µ –∫–æ–ª–ª–µ–∫—Ç–∏–≤."
                             "–£–¥–∞—á–∏! –ñ–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É ‚¨áÔ∏è",
                             reply_markup=get_on_start_kb())


@router.message(FormMusician.sample, F.audio)
async def add_sample(message: Message, state: FSMContext):
    audio_id = message.audio.file_id
    data = await state.update_data(sample=audio_id)
    await state.clear()
    user_tg = message.from_user.id
    data.setdefault("user_tg", user_tg)
    client = Client()
    json_data = json.dumps(data, ensure_ascii=False)
    client.add_musician(json_data)
    await message.answer("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏—Å–∫–∞—Ç—å –≥—Ä—É–ø–ø—Éüòâ\n"
                             "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω —Ç–µ–º, –∫—Ç–æ –∏—â–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã.\n"
                             "–¢–∞–∫ –≤—ã –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π–¥–µ—Ç–µ —Å–µ–±–µ –∫–æ–ª–ª–µ–∫—Ç–∏–≤."
                             "–£–¥–∞—á–∏! –ñ–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É ‚¨áÔ∏è",
                             reply_markup=get_on_start_kb())


@router.message(FormMusician.sample)
async def handle_invalid_sample(message: Message):
    await message.answer(
        text="–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª.\n"
             "–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑.\n"
             "–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'‚¨áÔ∏è",
        reply_markup=get_skip_kb()
    )